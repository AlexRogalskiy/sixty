ca65 V2.18 - Git b8ae5c2
Main file   : ram2.s
Current file: ram2.s

000000r 1               D1 := $d17b
000000r 1               FE := $fe1f
000000r 1               checkdata := $3f
000000r 1               TEST_COUNT := $3d
000000r 1               
000000r 1               .macro verify address
000000r 1                   ldx address
000000r 1                   iny
000000r 1                   lda (checkdata),Y
000000r 1                   cmp address
000000r 1                   bne @fail
000000r 1               .endmacro
000000r 1               
000000r 1  20 rr rr         jsr @reset
000003r 1  A9 00            lda #0
000005r 1  85 3D            sta TEST_COUNT
000007r 1               
000007r 1               	;; Format:
000007r 1               	;; Sequence of test instructions, finishing with `jsr .test`.
000007r 1               	;; - quint: expected current $d17b and fe1f, then d17b in bank1, d17b in bank 2, and fe1f
000007r 1               	;; (All sequences start with lda $C080, just to reset things to a known state.)
000007r 1               	;; 0-byte to terminate tests.
000007r 1               
000007r 1               
000007r 1  AD 8F C0     	lda $C08F				; Read $C08F, $C087 (read/write RAM bank 2)
00000Ar 1  AD 87 C0     	lda $C087				;
00000Dr 1  20 rr rr     	jsr @test				;
000010r 1  23 34 11 23  	.byte $23, $34, $11, $23, $34		;
000014r 1  34           
000015r 1               
000015r 1  60           	rts
000016r 1               
000016r 1               @test:
000016r 1  EE 7B D1         inc D1
000019r 1  EE 1F FE         inc FE
00001Cr 1               	;; pull address off of stack: it points just below check data for this test.
00001Cr 1  68           	pla
00001Dr 1  85 3F        	sta checkdata
00001Fr 1  AA           	tax
000020r 1  68           	pla
000021r 1  85 40        	sta checkdata+1
000023r 1  48           	pha
000024r 1  8A           	txa
000025r 1  18           	clc
000026r 1  69 05        	adc #5
000028r 1  48           	pha
000029r 1  A0 00        	ldy #0
00002Br 1               
00002Br 1  AE 7B D1 C8      verify D1
00002Fr 1  B1 3F CD 7B  
000033r 1  D1 D0 3A     
000036r 1  AE 1F FE C8      verify FE
00003Ar 1  B1 3F CD 1F  
00003Er 1  FE D0 2F     
000041r 1  AD 88 C0         lda $c088 ; $D17B in bank 1
000044r 1  AE 7B D1 C8      verify D1
000048r 1  B1 3F CD 7B  
00004Cr 1  D1 D0 21     
00004Fr 1  AD 80 C0         lda $c080 ; $D17B in bank 2
000052r 1  AE 7B D1 C8      verify D1
000056r 1  B1 3F CD 7B  
00005Ar 1  D1 D0 13     
00005Dr 1  AE 1F FE C8      verify FE
000061r 1  B1 3F CD 1F  
000065r 1  FE D0 08     
000068r 1  E6 3D            inc TEST_COUNT
00006Ar 1  20 rr rr         jsr @reset
00006Dr 1  60               rts
00006Er 1               
00006Er 1               @success:
00006Er 1  18               clc
00006Fr 1  60               rts
000070r 1               
000070r 1               @fail:
000070r 1  00               brk
000071r 1               
000071r 1               @reset:
000071r 1               	;; Initialize to known state:
000071r 1               	;; - $11 in $D17B bank 1 (ROM: $53)
000071r 1               	;; - $22 in $D17B bank 2 (ROM: $53)
000071r 1               	;; - $33 in $FE1F        (ROM: $60)
000071r 1  AD 8B C0     	lda $C08B		; Read and write bank 1
000074r 1  AD 8B C0     	lda $C08B
000077r 1  A9 11        	lda #$11
000079r 1  8D 7B D1     	sta D1
00007Cr 1  A9 33        	lda #$33
00007Er 1  8D 1F FE     	sta FE
000081r 1  AD 83 C0     	lda $C083		; Read and write bank 2
000084r 1  AD 83 C0     	lda $C083
000087r 1  A9 22        	lda #$22
000089r 1  8D 7B D1     	sta D1
00008Cr 1  AD 80 C0     	lda $C080
00008Fr 1  AD 7B D1     	lda D1
000092r 1  60           	rts
000092r 1               
