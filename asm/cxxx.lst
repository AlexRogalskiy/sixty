
; ******** Source: cxxx.s
     1                          * = $6000
     2                          currentTest = $03
     3                          add = $04
     4                          expected = $06
     5                          
     6                          !macro START testNumber {
     7                              jsr reset
     8                              ldx #testNumber
     9                              stx currentTest
    10                          }
    11                          
    12                          !macro C1_ROM {
    13                              jsr c1rom
    14                              bcs +
    15                              lda currentTest
    16                              brk
    17                          +
    18                          }
    19                          !macro C3_ROM {
    20                              jsr c3rom
    21                              bcs +
    22                              lda currentTest
    23                              brk
    24                          +
    25                          }
    26                          !macro C4_ROM {
    27                              jsr c4rom
    28                              bcs +
    29                              lda currentTest
    30                              brk
    31                          +
    32                          }
    33                          !macro C8_ROM {
    34                              jsr c8rom
    35                              bcs +
    36                              lda currentTest
    37                              brk
    38                          +
    39                          }
    40                          !macro C1_UNKNOWN {
    41                              jsr c1rom
    42                              bcc +
    43                              lda currentTest
    44                              brk
    45                          +
    46                          }
    47                          !macro C3_UNKNOWN {
    48                              jsr c3rom
    49                              bcc +
    50                              lda currentTest
    51                              brk
    52                          +
    53                          }
    54                          !macro C4_UNKNOWN {
    55                              jsr c4rom
    56                              bcc +
    57                              lda currentTest
    58                              brk
    59                          +
    60                          }
    61                          !macro C8_UNKNOWN {
    62                              jsr c8rom
    63                              bcc +
    64                              lda currentTest
    65                              brk
    66                          +
    67                          }
    68                          
    69                          
    70                          start:
    71                          
    72                          tests:
    73                              ;; test 19
    74                              ;; expect C3 and C8 rom
    75                          ;    +START $19
    76                          ;    +C1_UNKNOWN
    77                          ;    +C3_ROM
    78                          ;    +C4_UNKNOWN
    79                          ;    +C8_ROM
    80                          
    81                              ;; Test 15
    82  6000 20ab60a2158603         +START $15
    83  6007 20d2609003a50300       +C8_UNKNOWN
    84  600f 20b7609003a50300       +C1_UNKNOWN
    85  6017 20c0609003a50300       +C4_UNKNOWN
    86  601f 20c960b003a50300       +C3_ROM
    87                          
    88                              ;; Test 16
    89  6027 20ab60a2168603         +START $16
    90  602e 8d0bc0                 sta $c00b  ;; set slotC3Rom
    91  6031 20b7609003a50300       +C1_UNKNOWN
    92  6039 20c9609003a50300       +C3_UNKNOWN
    93  6041 20c0609003a50300       +C4_UNKNOWN
    94  6049 20d2609003a50300       +C8_UNKNOWN
    95                          
    96                              ;; test 17
    97                              ;; expect all ROM
    98  6051 20ab60a2178603         +START $17
    99  6058 8d07c0                 sta $c007  ;; set intCxRom -> everything should go to internal
   100  605b 20b760b003a50300       +C1_ROM
   101  6063 20c960b003a50300       +C3_ROM
   102  606b 20c060b003a50300       +C4_ROM
   103  6073 20d260b003a50300       +C8_ROM
   104                          
   105                              ;; test 18
   106                              ;; expect all ROM
   107  607b 20ab60a2188603         +START $18
   108  6082 8d07c0                 sta $c007  ;; set intCxRom
   109  6085 8d0bc0                 sta $c00b  ;; set slotc3
   110  6088 20b760b003a50300       +C1_ROM
   111  6090 20c960b003a50300       +C3_ROM
   112  6098 20c060b003a50300       +C4_ROM
   113  60a0 20d260b003a50300       +C8_ROM
   114                          
   115                          
   116  60a8 a503                   lda currentTest
   117  60aa 60                     rts
   118                          
   119                          reset:
   120  60ab ea                     nop
   121  60ac ea                     nop
   122  60ad 8d06c0                 sta $c006
   123  60b0 8d0ac0                 sta $c00a
   124  60b3 60                     rts
   125                          
   126                          fail:
   127  60b4 a503                   lda currentTest
   128  60b6 00                     brk
   129                          
   130                          ; if Carry is set, C1 is ROM
   131                          c1rom:
   132  60b7 ad4dc1                 lda $c14d
   133  60ba c9a5                   cmp #$a5
   134  60bc f001                   beq +
   135  60be 18                     clc
   136                          +
   137  60bf 60                     rts
   138                          
   139                          c4rom:
   140  60c0 ad36c4                 lda $c436
   141  60c3 c98d                   cmp #$8d
   142  60c5 f001                   beq +
   143  60c7 18                     clc
   144                          +
   145  60c8 60                     rts
   146                          
   147                          c3rom:
   148  60c9 ad00c3                 lda $c300
   149  60cc c92c                   cmp #$2c
   150  60ce f001                   beq +
   151  60d0 18                     clc
   152                          +
   153  60d1 60                     rts
   154                          
   155                          c8rom:
   156  60d2 ad00c8                 lda $c800
   157  60d5 c94c                   cmp #$4c
   158  60d7 f001                   beq +
   159  60d9 18                     clc
   160                          +
   161  60da 60                     rts
   162                          
   163                          
   164                          
   165                          test:
   166  60db a000                   ldy #$0
   167  60dd adf860                 lda .cxtestdata
   168  60e0 8504                   sta add
   169  60e2 adf960                 lda .cxtestdata+1
   170  60e5 8505                   sta add+1
   171  60e7 adfa60                 lda .cxtestdata+2
   172  60ea 8506                   sta expected
   173                          
   174                          loop:
   175  60ec b104                   lda (add),Y
   176  60ee c506                   cmp expected
   177  60f0 d0c2                   bne fail
   178  60f2 c8                     iny
   179  60f3 c005                   cpy #5
   180  60f5 90f5                   bcc loop
   181  60f7 60                     rts
   182                          
   183                          .cxtestdata
   184                          	;; C800-Cffe
   185                          ;	!byte $00, $c8, $4c
   186                          ;	!byte $21, $ca, $8d
   187                          ;	!byte $43, $cc, $f0
   188                          ;	!byte $b5, $ce, $7b
   189                          ;
   190                          ;	;; C100-C2ff
   191                          ;	!byte $4d, $c1, $a5
   192                          ;	!byte $6c, $c1, $2a
   193                          ;	!byte $b5, $c2, $ad
   194                          ;	!byte $ff, $c2, $00
   195                          ;
   196                          ;	;; C400-C7ff
   197                          ;	!byte $36, $c4, $8d
   198                          ;	!byte $48, $c5, $18
   199                          ;	!byte $80, $c6, $8b
   200                          ;	!byte $6e, $c7, $cb
   201                          ;
   202                          ;	;; C300-C3ff
   203                          ;	!byte $00, $c3, $2c
   204                          ;	!byte $0a, $c3, $0c
   205                          ;	!byte $2b, $c3, $04
