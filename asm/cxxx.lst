
; ******** Source: cxxx.s
     1                          * = $6000
     2                          currentTest = $03
     3                          add = $04
     4                          expected = $06
     5                          
     6                          !macro START {
     7                              jsr reset
     8                              inc currentTest
     9                              ldx currentTest
    10                          }
    11                          
    12                          !macro C1_ROM {
    13                              jsr c1rom
    14                              bcs +
    15                              lda currentTest
    16                              brk
    17                          +
    18                          }
    19                          !macro C3_ROM {
    20                              jsr c3rom
    21                              bcs +
    22                              lda currentTest
    23                              brk
    24                          +
    25                          }
    26                          !macro C4_ROM {
    27                              jsr c4rom
    28                              bcs +
    29                              lda currentTest
    30                              brk
    31                          +
    32                          }
    33                          !macro C8_ROM {
    34                              jsr c8rom
    35                              bcs +
    36                              lda currentTest
    37                              brk
    38                          +
    39                          }
    40                          !macro C1_UNKNOWN {
    41                              jsr c1rom
    42                              bcc +
    43                              lda currentTest
    44                              brk
    45                          +
    46                          }
    47                          !macro C3_UNKNOWN {
    48                              jsr c3rom
    49                              bcc +
    50                              lda currentTest
    51                              brk
    52                          +
    53                          }
    54                          !macro C4_UNKNOWN {
    55                              jsr c4rom
    56                              bcc +
    57                              lda currentTest
    58                              brk
    59                          +
    60                          }
    61                          !macro C8_UNKNOWN {
    62                              jsr c8rom
    63                              bcc +
    64                              lda currentTest
    65                              brk
    66                          +
    67                          }
    68                          
    69                          
    70                          start:
    71                              ;; Test 15
    72  6000 a914                   lda #$14
    73  6002 8503                   sta currentTest
    74  6004 20d660e603a603         +START
    75  600b 20fd609003a50300       +C8_UNKNOWN
    76  6013 20e2609003a50300       +C1_UNKNOWN
    77  601b 20eb609003a50300       +C4_UNKNOWN
    78  6023 20f460b003a50300       +C3_ROM
    79                          
    80                              ;; Test 16
    81  602b 20d660e603a603         +START
    82  6032 8d0bc0                 sta $c00b  ;; set slotC3Rom
    83  6035 20e2609003a50300       +C1_UNKNOWN
    84  603d 20f4609003a50300       +C3_UNKNOWN
    85  6045 20eb609003a50300       +C4_UNKNOWN
    86  604d 20fd609003a50300       +C8_UNKNOWN
    87                          
    88                              ;; test 17
    89                              ;; expect all ROM
    90  6055 20d660e603a603         +START
    91  605c 8d07c0                 sta $c007  ;; set intCxRom -> everything should go to internal
    92  605f 20e260b003a50300       +C1_ROM
    93  6067 20f460b003a50300       +C3_ROM
    94  606f 20eb60b003a50300       +C4_ROM
    95  6077 20fd60b003a50300       +C8_ROM
    96                          
    97                              ;; test 18
    98                              ;; expect all ROM
    99  607f 20d660e603a603         +START
   100  6086 8d07c0                 sta $c007  ;; set intCxRom
   101  6089 8d0bc0                 sta $c00b  ;; set slotc3
   102  608c 20e260b003a50300       +C1_ROM
   103  6094 20f460b003a50300       +C3_ROM
   104  609c 20eb60b003a50300       +C4_ROM
   105  60a4 20fd60b003a50300       +C8_ROM
   106                          
   107                              ;; test 19
   108                              ;; expect C3 and C8 rom
   109  60ac 20d660e603a603         +START
   110  60b3 20e2609003a50300       +C1_UNKNOWN
   111  60bb 20f460b003a50300       +C3_ROM
   112  60c3 20eb609003a50300       +C4_UNKNOWN
   113  60cb 20fd60b003a50300       +C8_ROM
   114                          
   115  60d3 a503                   lda currentTest
   116  60d5 60                     rts
   117                          
   118                          reset:
   119  60d6 ea                     nop
   120  60d7 ea                     nop
   121  60d8 8d06c0                 sta $c006
   122  60db 8d0ac0                 sta $c00a
   123  60de 60                     rts
   124                          
   125                          fail:
   126  60df a503                   lda currentTest
   127  60e1 00                     brk
   128                          
   129                          ; if Carry is set, C1 is ROM
   130                          c1rom:
   131  60e2 ad4dc1                 lda $c14d
   132  60e5 c9a5                   cmp #$a5
   133  60e7 f001                   beq +
   134  60e9 18                     clc
   135                          +
   136  60ea 60                     rts
   137                          
   138                          c4rom:
   139  60eb ad36c4                 lda $c436
   140  60ee c98d                   cmp #$8d
   141  60f0 f001                   beq +
   142  60f2 18                     clc
   143                          +
   144  60f3 60                     rts
   145                          
   146                          c3rom:
   147  60f4 ad00c3                 lda $c300
   148  60f7 c92c                   cmp #$2c
   149  60f9 f001                   beq +
   150  60fb 18                     clc
   151                          +
   152  60fc 60                     rts
   153                          
   154                          c8rom:
   155  60fd ad00c8                 lda $c800
   156  6100 c94c                   cmp #$4c
   157  6102 f001                   beq +
   158  6104 18                     clc
   159                          +
   160  6105 60                     rts
   161                          
   162                          
   163                          
   164                          test:
   165  6106 a000                   ldy #$0
   166  6108 ad2361                 lda .cxtestdata
   167  610b 8504                   sta add
   168  610d ad2461                 lda .cxtestdata+1
   169  6110 8505                   sta add+1
   170  6112 ad2561                 lda .cxtestdata+2
   171  6115 8506                   sta expected
   172                          
   173                          loop:
   174  6117 b104                   lda (add),Y
   175  6119 c506                   cmp expected
   176  611b d0c2                   bne fail
   177  611d c8                     iny
   178  611e c005                   cpy #5
   179  6120 90f5                   bcc loop
   180  6122 60                     rts
   181                          
   182                          .cxtestdata
   183                          	;; C800-Cffe
   184                          ;	!byte $00, $c8, $4c
   185                          ;	!byte $21, $ca, $8d
   186                          ;	!byte $43, $cc, $f0
   187                          ;	!byte $b5, $ce, $7b
   188                          ;
   189                          ;	;; C100-C2ff
   190                          ;	!byte $4d, $c1, $a5
   191                          ;	!byte $6c, $c1, $2a
   192                          ;	!byte $b5, $c2, $ad
   193                          ;	!byte $ff, $c2, $00
   194                          ;
   195                          ;	;; C400-C7ff
   196                          ;	!byte $36, $c4, $8d
   197                          ;	!byte $48, $c5, $18
   198                          ;	!byte $80, $c6, $8b
   199                          ;	!byte $6e, $c7, $cb
   200                          ;
   201                          ;	;; C300-C3ff
   202                          ;	!byte $00, $c3, $2c
   203                          ;	!byte $0a, $c3, $0c
   204                          ;	!byte $2b, $c3, $04
