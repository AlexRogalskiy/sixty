package com.beust.app

val KEY_MAP = mapOf(
        0x27 to listOf('\'', '"'),
        0x2c to listOf(',', '<'),
        0x2e to listOf('.', '>'),
        0x2f to listOf('/', '?'),
        0x31 to listOf('1', '!'),
        0x32 to listOf('2', '@'),
        0x33 to listOf('3', '#'),
        0x34 to listOf('4', '$'),
        0x35 to listOf('5', '%'),
        0x36 to listOf('6', '^'),
        0x37 to listOf('7', '&'),
        0x38 to listOf('8', '*'),
        0x39 to listOf('9', '('),
        0x30 to listOf('0', ')'),
        0x2d to listOf('-', '_'),
        0x3b to listOf(';', ':'),
        0x3d to listOf('=', '+'),
        0x5b to listOf('[', '{'),
        0x5c to listOf('\\', '|'),
        0x5d to listOf(']', '}')
)

// From apple2js
// [plain, control, shift]
val KEY_MAP_OLD = mapOf(
    // Most of these won't happen
    0x00 to listOf(0x00, 0x00, 0x00), //
    0x01 to listOf(0x01, 0x01, 0x01), //
    0x02 to listOf(0x02, 0x02, 0x02), //
    0x03 to listOf(0x03, 0x03, 0x03), //
    0x04 to listOf(0x04, 0x04, 0x04), //
    0x05 to listOf(0x05, 0x05, 0x05), //
    0x06 to listOf(0x06, 0x06, 0x06), //
    0x07 to listOf(0x07, 0x07, 0x07), //
    0x08 to listOf(0x7F, 0x7F, 0x7F), // BS/DELETE
    0x09 to listOf(0x09, 0x09, 0x09), // TAB
    0x0A to listOf(0x0A, 0x0A, 0x0A), //
    0x0B to listOf(0x0B, 0x0B, 0x0B), //
    0x0C to listOf(0x0C, 0x0C, 0x0C), //
    0x0D to listOf(0x0D, 0x0D, 0x0D), // CR
    0x0E to listOf(0x0E, 0x0E, 0x0E), //
    0x0F to listOf(0x0F, 0x0F, 0x0F), //

    0x10 to listOf(0xff, 0xff, 0xff), // SHIFT
    0x11 to listOf(0xff, 0xff, 0xff), // CTRL
    0x12 to listOf(0xff, 0xff, 0xff), // ALT/OPTION
    0x13 to listOf(0x13, 0x13, 0x13), //
    0x14 to listOf(0x14, 0x14, 0x14), //
    0x15 to listOf(0x15, 0x15, 0x15), //
    0x16 to listOf(0x16, 0x16, 0x16), //
    0x17 to listOf(0x17, 0x17, 0x18), //
    0x18 to listOf(0x18, 0x18, 0x18), //
    0x19 to listOf(0x19, 0x19, 0x19), //
    0x1A to listOf(0x1A, 0x1A, 0x1A), //
    0x1B to listOf(0x1B, 0x1B, 0x1B), // ESC
    0x1C to listOf(0x1C, 0x1C, 0x1C), //
    0x1D to listOf(0x1D, 0x1D, 0x1D), //
    0x1E to listOf(0x1E, 0x1E, 0x1E), //
    0x1F to listOf(0x1F, 0x1F, 0x1F), //

    // Most of these besides space won't happen
    0x20 to listOf(0x20, 0x20, 0x20), //
    0x21 to listOf(0x21, 0x21, 0x21), //
    0x22 to listOf(0x22, 0x22, 0x22), //
    0x23 to listOf(0x23, 0x23, 0x23), //
    0x24 to listOf(0x24, 0x24, 0x24), //
    0x25 to listOf(0x08, 0x08, 0x08), // <- left
    0x26 to listOf(0x0B, 0x0B, 0x0B), // ^ up
    0x27 to listOf(0x15, 0x15, 0x15), // -> right
    0x28 to listOf(0x0A, 0x0A, 0x0A), // v down
    0x29 to listOf(0x29, 0x29, 0x29), // )
    0x2A to listOf(0x2A, 0x2A, 0x2A), // *
    0x2B to listOf(0x2B, 0x2B, 0x2B), // +
    0x2C to listOf(0x2C, 0x2C, 0x3C), // , - <
    0x2D to listOf(0x2D, 0x2D, 0x5F), // - - _
    0x2E to listOf(0x2E, 0x2E, 0x3E), // . - >
    0x2F to listOf(0x2F, 0x2F, 0x3F), // / - ?

    0x30 to listOf(0x30, 0x30, 0x29), // 0 - )
    0x31 to listOf(0x31, 0x31, 0x21), // 1 - !
    0x32 to listOf(0x32, 0x00, 0x40), // 2 - @
    0x33 to listOf(0x33, 0x33, 0x23), // 3 - #
    0x34 to listOf(0x34, 0x34, 0x24), // 4 - $
    0x35 to listOf(0x35, 0x35, 0x25), // 5 - %
    0x36 to listOf(0x36, 0x36, 0x5E), // 6 - ^
    0x37 to listOf(0x37, 0x37, 0x26), // 7 - &
    0x38 to listOf(0x38, 0x38, 0x2A), // 8 - *
    0x39 to listOf(0x39, 0x39, 0x28), // 9 - (
    0x3A to listOf(0x3A, 0x3A, 0x3A), //  to
    0x3B to listOf(0x3B, 0x3B, 0x3A), // ; -  to
    0x3C to listOf(0x3C, 0x3C, 0x3C), // <
    0x3D to listOf(0x3D, 0x3D, 0x2B), // = - +
    0x3E to listOf(0x3E, 0x3E, 0x3E), // >
    0x3F to listOf(0x3F, 0x3F, 0x3F), // ?

    // Alpha and control
    0x40 to listOf(0x40, 0x00, 0x40), // @
    0x41 to listOf(0x61, 0x01, 0x41), // A
    0x42 to listOf(0x62, 0x02, 0x42), // B
    0x43 to listOf(0x63, 0x03, 0x43), // C - BRK
    0x44 to listOf(0x64, 0x04, 0x44), // D
    0x45 to listOf(0x65, 0x05, 0x45), // E
    0x46 to listOf(0x66, 0x06, 0x46), // F
    0x47 to listOf(0x67, 0x07, 0x47), // G - BELL
    0x48 to listOf(0x68, 0x08, 0x48), // H
    0x49 to listOf(0x69, 0x09, 0x49), // I - TAB
    0x4A to listOf(0x6A, 0x0A, 0x4A), // J - NL
    0x4B to listOf(0x6B, 0x0B, 0x4B), // K - VT
    0x4C to listOf(0x6C, 0x0C, 0x4C), // L
    0x4D to listOf(0x6D, 0x0D, 0x4D), // M - CR
    0x4E to listOf(0x6E, 0x0E, 0x4E), // N
    0x4F to listOf(0x6F, 0x0F, 0x4F), // O

    0x50 to listOf(0x70, 0x10, 0x50), // P
    0x51 to listOf(0x71, 0x11, 0x51), // Q
    0x52 to listOf(0x72, 0x12, 0x52), // R
    0x53 to listOf(0x73, 0x13, 0x53), // S
    0x54 to listOf(0x74, 0x14, 0x54), // T
    0x55 to listOf(0x75, 0x15, 0x55), // U
    0x56 to listOf(0x76, 0x16, 0x56), // V
    0x57 to listOf(0x77, 0x17, 0x57), // W
    0x58 to listOf(0x78, 0x18, 0x58), // X
    0x59 to listOf(0x79, 0x19, 0x59), // Y
    0x5A to listOf(0x7A, 0x1A, 0x5A), // Z
    0x5B to listOf(0xFF, 0xFF, 0xFF), // Left window
    0x5C to listOf(0xFF, 0xFF, 0xFF), // Right window
    0x5D to listOf(0xFF, 0xFF, 0xFF), // Select
    0x5E to listOf(0x5E, 0x1E, 0x5E), //
    0x5F to listOf(0x5F, 0x1F, 0x5F), // _

    // Numeric pad
    0x60 to listOf(0x30, 0x30, 0x30), // 0
    0x61 to listOf(0x31, 0x31, 0x31), // 1
    0x62 to listOf(0x32, 0x32, 0x32), // 2
    0x63 to listOf(0x33, 0x33, 0x33), // 3
    0x64 to listOf(0x34, 0x34, 0x34), // 4
    0x65 to listOf(0x35, 0x35, 0x35), // 5
    0x66 to listOf(0x36, 0x36, 0x36), // 6
    0x67 to listOf(0x37, 0x37, 0x37), // 7
    0x68 to listOf(0x38, 0x38, 0x38), // 8
    0x69 to listOf(0x39, 0x39, 0x39), // 9

    0x6A to listOf(0x2A, 0x2A, 0x2A), // *
    0x6B to listOf(0x2B, 0x2B, 0x2B), // +
    0x6D to listOf(0x2D, 0x2D, 0x2D), // -
    0x6E to listOf(0x2E, 0x2E, 0x2E), // .
    0x6F to listOf(0x2F, 0x2F, 0x39), // /

    // Stray keys
    0xAD to listOf(0x2D, 0x2D, 0x5F), // - - _
    0xBA to listOf(0x3B, 0x3B, 0x3A), // ; -  to
    0xBB to listOf(0x3D, 0x3D, 0x2B), // = - +
    0xBC to listOf(0x2C, 0x2C, 0x3C), // , - <
    0xBD to listOf(0x2D, 0x2D, 0x5F), // - - _
    0xBE to listOf(0x2E, 0x2E, 0x3E), // . - >
    0xBF to listOf(0x2F, 0x2F, 0x3F), // / - ?
    0xC0 to listOf(0x60, 0x60, 0x7E), // ` - ~
    0xDB to listOf(0x5B, 0x1B, 0x7B), // listOf( - {
    0xDC to listOf(0x5C, 0x1C, 0x7C), // \ - |
    0xDD to listOf(0x5D, 0x1D, 0x7D), // ) - }
    0xDE to listOf(0x27, 0x22, 0x22), // ' - '

    0xFF to listOf(0xFF, 0xFF, 0xFF) // No comma line
)